@using System.Text.RegularExpressions
@functions{
    public string StripHtml(string input)
    {
        return string.IsNullOrEmpty(input) ? "" : Regex.Replace(input, "<.*?>", string.Empty);
    }
}

@model IEnumerable<Do_An_Tot_Nghiep.Models.Save>

@{
    ViewData["Title"] = "Các mục đã lưu";
}

<div class="container-fluid mt-4" style="padding-left:0;padding-right:0;">
    <h2 class="page-title mb-4">Các mục đã lưu</h2>

    <div class="filter-container mb-4">
        <label for="filterType" class="filter-label">Lọc theo loại:</label>
        <select id="filterType" class="filter-select">
            <option value="all">Tất cả</option>
            <option value="post">Bài đăng</option>
            <option value="document">Tài liệu</option>
            <option value="topic">Chủ đề</option>
        </select>
    </div>

    @if (!Model.Any())
    {
        <div class="empty-state">
            <i class="fas fa-bookmark"></i>
            <p>Bạn chưa lưu mục nào.</p>
        </div>
    }
    else
    {
        <div class="table-container">
            <table class="table" id="savedItemsTable">
                <thead>
                    <tr>
                        <th>Tiêu đề</th>
                        <th>Loại</th>
                        <th>Người đăng</th>
                        <th>Ngày lưu</th>
                        <th>Hành động</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var save in Model)
                {
                    string typeClass = save.Post != null ? "post" : save.Document != null ? "document" : save.Topic != null ? "topic" : "";
                    <tr class="item-row" data-type="@typeClass">
                        <td>
                            @if (save.Post != null)
                            {
                                <i class="fas fa-newspaper text-primary" title="Bài đăng"></i>
                                <strong>@StripHtml(save.Post.Title)</strong>
                            }
                            else if (save.Document != null)
                            {
                                <i class="fas fa-file-alt text-success" title="Tài liệu"></i>
                                <strong>@StripHtml(save.Document.Title)</strong>
                            }
                            else if (save.Topic != null)
                            {
                                <i class="fas fa-lightbulb text-warning" title="Chủ đề"></i>
                                <strong>@StripHtml(save.Topic.Title)</strong>
                            }
                        </td>
                        <td>
                            @if (save.Post != null)
                            {
                                <span class="badge badge-post">Bài đăng</span>
                            }
                            else if (save.Document != null)
                            {
                                <span class="badge badge-document">Tài liệu</span>
                            }
                            else if (save.Topic != null)
                            {
                                <span class="badge badge-topic">Chủ đề</span>
                            }
                        </td>
                        <td>
                            @if (save.Post != null)
                            {
                                @save.Post.User?.Username
                            }
                            else if (save.Document != null)
                            {
                                @save.Document.User?.Username
                            }
                            else if (save.Topic != null)
                            {
                                @save.Topic.User?.Username
                            }
                        </td>
                        <td>
                            @save.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                        </td>
                        <td>
                            <div class="action-group">
                                @if (save.Post != null)
                                {
                                    <a href="@Url.Action("Details", "Posts", new { id = save.Post.PostId })" class="btn btn-action btn-post" title="Xem chi tiết"><i class="fas fa-eye"></i></a>
                                    <a href="@Url.Action("Unsave", "Saves", new { type = "post", id = save.Post.PostId })" class="btn btn-action btn-unsave" title="Bỏ lưu"><i class="fas fa-trash"></i></a>
                                }
                                else if (save.Document != null)
                                {
                                    <a href="@Url.Action("Details", "Documents", new { id = save.Document.DocumentId })" class="btn btn-action btn-document" title="Xem chi tiết"><i class="fas fa-eye"></i></a>
                                    <a href="@Url.Action("Unsave", "Saves", new { type = "document", id = save.Document.DocumentId })" class="btn btn-action btn-unsave" title="Bỏ lưu"><i class="fas fa-trash"></i></a>
                                }
                                else if (save.Topic != null)
                                {
                                    <a href="@Url.Action("Details", "Topics", new { id = save.Topic.TopicId })" class="btn btn-action btn-topic" title="Xem chi tiết"><i class="fas fa-eye"></i></a>
                                    <a href="@Url.Action("Unsave", "Saves", new { type = "topic", id = save.Topic.TopicId })" class="btn btn-action btn-unsave" title="Bỏ lưu"><i class="fas fa-trash"></i></a>
                                }
                            </div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }
</div>

<style>
    .page-title {
        font-size: 2rem;
        font-weight: 600;
        color: #1a1a1a;
        margin-bottom: 2rem;
    }

    .filter-container {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 2rem;
    }

    .filter-label {
        font-weight: 500;
        color: #4a4a4a;
        margin: 0;
    }

    .filter-select {
        padding: 0.5rem 1rem;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        background-color: white;
        color: #4a4a4a;
        font-size: 0.95rem;
        transition: all 0.2s ease;
        width: 180px;
    }

    .filter-select:hover {
        border-color: #bdbdbd;
    }

    .filter-select:focus {
        outline: none;
        border-color: #2196f3;
        box-shadow: 0 0 0 2px rgba(33, 150, 243, 0.1);
    }

    .empty-state {
        text-align: center;
        padding: 3rem;
        background: #f8f9fa;
        border-radius: 12px;
        color: #6c757d;
    }

    .empty-state i {
        font-size: 3rem;
        margin-bottom: 1rem;
        color: #adb5bd;
    }

    .table-container {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.04);
        overflow: hidden;
    }

    .table {
        margin: 0;
        border-collapse: separate;
        border-spacing: 0;
    }

    .table thead th {
        background: #f8f9fa;
        color: #495057;
        font-weight: 600;
        padding: 1rem;
        border-bottom: 1px solid #e9ecef;
        font-size: 0.95rem;
    }

    .table tbody tr {
        transition: background-color 0.2s ease;
    }

    .table tbody tr:hover {
        background-color: #f8f9fa;
    }

    .table td {
        padding: 1rem;
        color: #495057;
        border-bottom: 1px solid #e9ecef;
        vertical-align: middle;
    }

    .badge {
        padding: 0.5rem 1rem;
        border-radius: 6px;
        font-weight: 500;
        font-size: 0.85rem;
    }

    .badge-post {
        background-color: #e3f2fd;
        color: #1976d2;
    }

    .badge-document {
        background-color: #e8f5e9;
        color: #2e7d32;
    }

    .badge-topic {
        background-color: #fff3e0;
        color: #f57c00;
    }

    .action-group {
        display: flex;
        align-items: center;
        gap: 0.2rem;
        justify-content: center;
    }

    .btn-action {
        padding: 0.12rem 0.18rem;
        border-radius: 4px;
        background: none;
        border: none;
        box-shadow: none;
        font-size: 0.95rem;
        color: #b0b0b0;
        transition: color 0.15s;
        min-width: unset;
    }

    .btn-action .fa-eye, .btn-action .fa-trash {
        font-size: 1rem;
        color: #b0b0b0;
        vertical-align: middle;
    }

    .btn-action:hover, .btn-action:focus {
        color: #555;
        background: none;
        box-shadow: none;
    }

    .btn-action:hover .fa-eye, .btn-action:focus .fa-eye {
        color: #555;
    }

    .btn-post,
    .btn-document,
    .btn-topic {
        background: none !important;
        color: inherit;
    }
    .btn-action:active, .btn-action.active {
        background: #ffe0b2 !important;
        color: #f57c00 !important;
    }
    .btn-action:active .fa-eye, .btn-action.active .fa-eye {
        color: #f57c00 !important;
    }

    .btn-action:hover {
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .table i {
        font-size: 1.1rem;
        margin-right: 0.5rem;
    }

    .btn-unsave {
        color: #b0b0b0;
        background: none;
        border: none;
        margin-left: 0.2rem;
        padding: 0.25rem 0.4rem;
        border-radius: 4px;
        transition: color 0.15s;
    }
    .btn-unsave .fa-trash {
        font-size: 1.1rem;
        color: #b0b0b0;
        vertical-align: middle;
    }
    .btn-unsave:hover, .btn-unsave:focus {
        color: #e53935;
        background: none;
    }
    .btn-unsave:hover .fa-trash, .btn-unsave:focus .fa-trash {
        color: #e53935;
    }

    @@ media (max-width: 768px) {
        .table-container {
            margin: 0 -1rem;
            border-radius: 0;
        }

        .table td, .table th {
            padding: 0.75rem;
        }

        .filter-container {
            flex-direction: column;
            align-items: flex-start;
        }

        .filter-select {
            width: 100%;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const filter = document.getElementById('filterType');
        const rows = document.querySelectorAll('#savedItemsTable .item-row');
        
        filter.addEventListener('change', function () {
            const val = this.value;
            rows.forEach(row => {
                if (val === 'all' || row.getAttribute('data-type') === val) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });
    });
</script> 