@{
    var topics = ViewBag.topic as IEnumerable<Do_An_Tot_Nghiep.Models.Topic>;
    var documents = ViewBag.document as IEnumerable<Do_An_Tot_Nghiep.Models.Document>;
    var posts = ViewBag.post as IEnumerable<Do_An_Tot_Nghiep.Models.Post>;
    ViewData["Title"] = "Home Page";
}

<head>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
    <link href="~/css/home.css" rel="stylesheet" />
</head>

<div class="banner">
    <img src="~/css/img/dainam.jpg" alt="Banner" class="banner-img" />
    <div class="logo-box">
        <img src="~/css/img/dai_nam_logo.png" alt="Logo" class="logo-img" />
        <div class="info-text">
            <h1 class="main-text">Không gian cố vấn học tập và sinh viên</h1>
            <p class="sub-text">Thời gian cố vấn từ 8h00 đến 16h30</p>
        </div>
    </div>
</div>

<div class="page-wrapper">
    <div class="main-content">
        <nav class="tab-container">
            <button class="tab active" data-tab="TaiLieuChung">
                <i class="fas fa-file-alt"></i> Tài liệu chung
            </button>
            <button class="tab" data-tab="ChuDe">
                <i class="fas fa-folder"></i> Chủ đề
            </button>
            <button class="tab" data-tab="GocCoVan">
                <i class="fas fa-comments"></i> Góc cố vấn
            </button>
        </nav>

        <div class="tab-content-wrapper">
            <div id="TaiLieuChung" class="tab-content active">
                <div class="content-container">
                    <div style="margin-bottom: 1.5rem;">
                        @if (!ViewBag.Role.Equals("Student"))
                        {
                            <a href="/Documents/Create" class="btn-dainam-orange">
                                <i class="fas fa-paper-plane"></i> Đăng tài liệu
                            </a>
                        }
                    </div>
                    <div class="container">
                        <div class="document-container">
                            @if (documents != null && documents.Any())
                            {
                                foreach (var document in documents)
                                {
                                    @await Html.PartialAsync("_Document", document)
                                }
                            }
                            else
                            {
                                <p class="no-content">Chưa có tài liệu nào.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div id="ChuDe" class="tab-content">
                <div class="content-container">
                    <div style="margin-bottom: 1.5rem;">
                        <a href="/Topics/Create" class="btn-dainam-orange">
                            <i class="fas fa-plus"></i> Tạo chủ đề
                        </a>
                    </div>
                    <div class="topic-container">
                        @if (topics != null && topics.Any())
                        {
                            foreach (var topic in topics)
                            {
                                @await Html.PartialAsync("_Topic", topic)
                            }
                        }
                        else
                        {
                            <p class="no-content">Chưa có chủ đề nào.</p>
                        }
                    </div>
                </div>
            </div>

            <div id="GocCoVan" class="tab-content">
                <div class="content-container">
                    <div style="margin-bottom: 1.5rem;">
                        <a href="/Posts/Create" class="btn-dainam-orange">
                            <i class="fas fa-question-circle"></i> Gửi câu hỏi
                        </a>
                    </div>
                    <div class="post-container">
                        @if (posts != null && posts.Any())
                        {
                            foreach (var post in posts)
                            {
                                @await Html.PartialAsync("_Post", post)
                            }
                        }
                        else
                        {
                            <p class="no-content">Chưa có câu hỏi nào.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .page-wrapper {
        min-height: 100vh;
        background: #f5f5f5;
        padding: 2rem 0;
    }

    .main-content {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1rem;
    }

    .tab-container {
        display: flex;
        gap: 1rem;
        margin-bottom: 2rem;
        border-bottom: 2px solid #e0e0e0;
        background: #fff;
        padding: 0;
        position: sticky;
        top: 0;
        z-index: 100;
    }

    .tab {
        padding: 1rem 2rem;
        border: none;
        background: none;
        font-size: 1.1rem;
        color: #666;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .tab:hover {
        color: #9c27b0;
    }

    .tab.active {
        color: #9c27b0;
        border-bottom: 3px solid #9c27b0;
    }

    .tab i {
        margin-right: 0.5rem;
    }

    .tab-content-wrapper {
        position: relative;
    }

    .tab-content {
        display: none;
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.3s ease;
    }

    .tab-content.active {
        display: block;
        opacity: 1;
        visibility: visible;
    }

    .content-container {
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        padding: 2rem;
        margin-bottom: 2rem;
    }

    .input-form {
        display: flex;
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .input-avatar {
        width: 48px;
        height: 48px;
        border-radius: 50%;
        flex-shrink: 0;
    }

    .input-group {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .input-field {
        width: 100%;
        padding: 0.8rem;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        font-size: 1rem;
        box-sizing: border-box;
    }

    textarea.input-field {
        min-height: 100px;
        resize: vertical;
    }

    .form-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 1rem;
    }

    .file-upload {
        position: relative;
    }

    .file-input {
        position: absolute;
        width: 0;
        height: 0;
        opacity: 0;
    }

    .file-label {
        display: inline-flex;
        align-items: center;
        padding: 0.8rem 1.5rem;
        background: #f5f5f5;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .file-label:hover {
        background: #e0e0e0;
    }

    .file-label i {
        margin-right: 0.5rem;
    }

    .documents-list, .topics-list {
        margin-top: 2rem;
    }

    .no-content {
        text-align: center;
        color: #666;
        font-style: italic;
        padding: 2rem;
    }

    .btn-dainam-orange {
        background: linear-gradient(135deg, #FFA726, #FFCC80);
        color: white;
        font-weight: bold;
        border: none;
        padding: 0.8rem 1.5rem;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        cursor: pointer;
    }

    .btn-dainam-orange:hover {
        background: linear-gradient(135deg, #FB8C00, #FFB74D);
        transform: translateY(-2px);
        box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);
    }
</style>

<script>
    function showTab(element) {
        // Remove active class from all tabs and contents
        document.querySelectorAll(".tab").forEach(tab => tab.classList.remove("active"));
        document.querySelectorAll(".tab-content").forEach(content => {
            content.classList.remove("active");
            content.style.opacity = "0";
            content.style.visibility = "hidden";
        });
        
        // Add active class to clicked tab and corresponding content
        element.classList.add("active");
        const tabId = element.getAttribute("data-tab");
        const targetContent = document.getElementById(tabId);
        targetContent.classList.add("active");
        targetContent.style.opacity = "1";
        targetContent.style.visibility = "visible";
        
        // Save selected tab to localStorage
        localStorage.setItem("selectedTab", tabId);

        // Reset any open menus when switching tabs
        document.querySelectorAll('.post-menu, .document-menu, .topic-menu').forEach(menu => {
            menu.classList.remove('show');
        });

        // Reinitialize event listeners for the active tab
        initializeTabEventListeners(tabId);
    }

    function initializeTabEventListeners(tabId) {
        // Initialize event listeners based on the active tab
        if (tabId === 'ChuDe') {
            // Reinitialize topic comment and reply functionality
            document.querySelectorAll('.topic-actions').forEach(actions => {
                const menu = actions.querySelector('.topic-menu');
                if (menu) {
                    menu.addEventListener('click', function(event) {
                        event.stopPropagation();
                    });
                }
            });

            // Reinitialize reply forms
            document.querySelectorAll('.custom-reply-btn').forEach(btn => {
                btn.onclick = function() {
                    const commentId = this.getAttribute('onclick').match(/'([^']+)'/)[1];
                    topicToggleReplyForm(commentId);
                };
            });
        }
    }

    // Add click event listeners to tabs
    document.querySelectorAll(".tab").forEach(tab => {
        tab.addEventListener("click", function() {
            showTab(this);
        });
    });

    // Restore selected tab on page load
    window.addEventListener("load", function() {
        const selectedTab = localStorage.getItem("selectedTab") || "TaiLieuChung";
        const tabElement = document.querySelector(`.tab[data-tab="${selectedTab}"]`);
        if (tabElement) {
            showTab(tabElement);
        }
    });

    // Close menus when clicking outside
    document.addEventListener('click', function(event) {
        if (!event.target.closest('.post-actions') &&
            !event.target.closest('.document-actions') &&
            !event.target.closest('.topic-actions')) {
            document.querySelectorAll('.post-menu, .document-menu, .topic-menu').forEach(menu => {
                menu.classList.remove('show');
            });
        }
    });

    // Prevent menu from closing when clicking inside
    document.querySelectorAll('.post-menu, .document-menu, .topic-menu').forEach(menu => {
        menu.addEventListener('click', function(event) {
            event.stopPropagation();
        });
    });
</script>

<script src="~/js/topic.js"></script>

<script>
    // Infinite scroll chỉ khai báo 1 lần ở đây!
    let isLoading = false;
    let skip = 4;

    function loadMoreDocuments() {
        if (isLoading) return;
        isLoading = true;

        fetch(`/Home/LoadMoreDocuments?skip=${skip}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const container = document.querySelector('.document-container');
                    if (container) {
                        container.insertAdjacentHTML('beforeend', data.html);
                        skip += 4;
                    }
                } else if (data.message === "No more documents") {
                    window.removeEventListener('scroll', handleScroll);
                }
                isLoading = false;
            })
            .catch(error => {
                console.error('Error loading more documents:', error);
                isLoading = false;
            });
    }

    function handleScroll() {
        // Chỉ thực hiện khi tab Tài liệu đang active
        const tab = document.querySelector('.tab.active');
        if (!tab || tab.getAttribute('data-tab') !== 'TaiLieuChung') return;

        if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 1000) {
            loadMoreDocuments();
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        window.addEventListener('scroll', handleScroll);
    });
</script>

<script>
    // Infinite scroll cho Góc cố vấn (Post)
    let isLoadingPost = false;
    let skipPost = 4;

    function loadMorePosts() {
        if (isLoadingPost) return;
        isLoadingPost = true;

        fetch(`/Home/LoadMorePosts?skip=${skipPost}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const container = document.querySelector('.post-container');
                    if (container) {
                        container.insertAdjacentHTML('beforeend', data.html);
                        skipPost += 4;
                    }
                } else if (data.message === "No more posts") {
                    window.removeEventListener('scroll', handleScrollPost);
                }
                isLoadingPost = false;
            })
            .catch(error => {
                console.error('Error loading more posts:', error);
                isLoadingPost = false;
            });
    }

    function handleScrollPost() {
        // Chỉ thực hiện khi tab Góc cố vấn đang active
        const tab = document.querySelector('.tab.active');
        if (!tab || tab.getAttribute('data-tab') !== 'GocCoVan') return;

        if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 1000) {
            loadMorePosts();
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        window.addEventListener('scroll', handleScrollPost);
    });
</script>

<script>
    // Infinite scroll cho Chủ đề (Topic)
    let isLoadingTopic = false;
    let skipTopic = 4;

    function loadMoreTopics() {
        if (isLoadingTopic) return;
        isLoadingTopic = true;

        fetch(`/Home/LoadMoreTopics?skip=${skipTopic}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const container = document.querySelector('.topic-container');
                    if (container) {
                        container.insertAdjacentHTML('beforeend', data.html);
                        skipTopic += 4;
                    }
                } else if (data.message === "No more topics") {
                    window.removeEventListener('scroll', handleScrollTopic);
                }
                isLoadingTopic = false;
            })
            .catch(error => {
                console.error('Error loading more topics:', error);
                isLoadingTopic = false;
            });
    }

    function handleScrollTopic() {
        // Chỉ thực hiện khi tab Chủ đề đang active
        const tab = document.querySelector('.tab.active');
        if (!tab || tab.getAttribute('data-tab') !== 'ChuDe') return;

        if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 1000) {
            loadMoreTopics();
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        window.addEventListener('scroll', handleScrollTopic);
    });
</script>
